@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@using X.PagedList;
@model IPagedList<Patisserie.Models.DB.AspNetUser>

@{
    ViewData["Title"] = "Index";
}


<style>
    /*to make it the column fit*/
    th, td {
        white-space: nowrap;
    }
</style>

<h4>Manage users</h4>

<div class="row mb-3">
    <div class="col-12 col-md-10 col-lg-5">
        <form class="card card-sm border-0" id="searchForm" action="/ManageUser/Index" method="get" autocomplete="off">
            <div class="card-body row">
                <div class="col">
                    <div class="input-group">
                        <input type="text" id="searchString" name="searchString" class="form-control rounded"
                               autocomplete="off" onkeyup="XAjaxRequest(this.value);" placeholder="Search users" required>
                    </div>
                </div>

                <div class="col-auto">
                    <button class="btn btn-md btn-success" type="submit">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </form>

        <div id="autoSuggestContainer" class="autoSuggest" style="border: none;"></div>
    </div>
</div>

<!--have horizontal scrolling-->
<div style="width: 100%; overflow-x: auto;" class="mb-5">
    <table class="table table-responsive">
        @if (Model.Count > 0)
        {
            <thead>
                <tr class="table-active">
                    <th>
                        @Html.DisplayNameFor(model => model.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().PhoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().Membership)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.First().MembershipDuration)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.First().MembershipExpiry)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastName)
                        </td>
                        <td>
                            @if (string.IsNullOrEmpty(item.PhoneNumber))
                            {
                                <span class="text-muted">Unavailable</span>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Membership)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.MembershipDuration) months
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MembershipExpiry)
                        </td>
                        <td>

                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-info btn-sm button_actions">Edit</a>
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-secondary btn-sm button_actions">Details</a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm button_actions">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        }
        else
        {
            <tr class="table-active">
                <td>Sorry no matching user found!</td>
            </tr>
        }
    </table>
</div>

@*code for display number of pages *@
@Html.PagedListPager(Model, page => Url.Action("Index",
        new { Page = page }),
        new PagedListRenderOptions
        {
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
    })


<!--AJAX-->
<script type="text/javascript">
    function XAjaxRequest(searchString) {
        if (searchString.length < 3) {
            //on deleting input to enter something else, needs clear
            document.getElementById("autoSuggestContainer").innerHTML = "";
            return;
        }
        var xmlhttp;
        xmlhttp = new XMLHttpRequest();
        //url must be matching with the ControllerName/ActionMethod
        var url = "/ManageUser/IndexAJAX?searchString=" + searchString;
        xmlhttp.open("GET", url, false);
        xmlhttp.send();
        //displays the suggested div
        document.getElementById("autoSuggestContainer").style.display = "block";
        document.getElementById("autoSuggestContainer").innerHTML = "";

        var messageObject = JSON.parse(xmlhttp.responseText); // receive the respose text

        var autoSuggestions = "";

        for (var i = 0; i < messageObject.length; i++) {
            autoSuggestions +=
                // + messageObject[i].FirstName + "\" " + messageObject[i].LastName + "\" "
                autoSuggestions +=
                "<input type=\"button\" value=\"" + messageObject[i].FirstName + "\" "
                + "onclick=\"document.getElementById('searchString').value = this.value; document.getElementById('searchForm').submit();\" "
                + "/>";
            autoSuggestions += "<br />";
        }
        //place the generated buttons HTML code inside the display div
        document.getElementById("autoSuggestContainer").innerHTML = autoSuggestions;
    }
</script>